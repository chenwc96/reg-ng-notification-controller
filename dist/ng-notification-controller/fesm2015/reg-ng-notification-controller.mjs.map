{"version":3,"file":"reg-ng-notification-controller.mjs","sources":["../../../projects/ng-notification-controller/src/lib/modules/caption/caption.component.ts","../../../projects/ng-notification-controller/src/lib/modules/caption/caption.component.html","../../../projects/ng-notification-controller/src/lib/modules/caption/caption.module.ts","../../../projects/ng-notification-controller/src/lib/modules/turn-on-notifications-sheet/turn-on-notifications-sheet.component.ts","../../../projects/ng-notification-controller/src/lib/modules/turn-on-notifications-sheet/turn-on-notifications-sheet.component.html","../../../projects/ng-notification-controller/src/lib/modules/turn-on-notifications-sheet/turn-on-notifications-sheet.module.ts","../../../projects/ng-notification-controller/src/lib/modules/turn-off-notifications-sheet/turn-off-notifications-sheet.component.ts","../../../projects/ng-notification-controller/src/lib/modules/turn-off-notifications-sheet/turn-off-notifications-sheet.component.html","../../../projects/ng-notification-controller/src/lib/modules/turn-off-notifications-sheet/turn-off-notifications-sheet.module.ts","../../../projects/ng-notification-controller/src/lib/const/notifications-const.ts","../../../projects/ng-notification-controller/src/lib/const/session-storage-keys.ts","../../../projects/ng-notification-controller/src/lib/http-service/request-header.enum.ts","../../../projects/ng-notification-controller/src/lib/http-service/http.provider.service.ts","../../../projects/ng-notification-controller/src/lib/ng-notification-controller.service.ts","../../../projects/ng-notification-controller/src/lib/ng-notification-controller.component.ts","../../../projects/ng-notification-controller/src/lib/ng-notification-controller.component.html","../../../projects/ng-notification-controller/src/lib/ng-notification-controller.module.ts","../../../projects/ng-notification-controller/src/lib/config/configurations.ts","../../../projects/ng-notification-controller/src/lib/config/noti-api.ts","../../../projects/ng-notification-controller/src/public-api.ts","../../../projects/ng-notification-controller/src/reg-ng-notification-controller.ts"],"sourcesContent":["import { Component, HostBinding, Input } from '@angular/core';\nimport { CdsLangPipe } from '@cds/ng-core/lang';\n\n@Component({\n  selector: 'ml-caption',\n  templateUrl: './caption.component.html',\n  styleUrls: ['./caption.component.scss']\n})\nexport class MLCaptionComponent {\n  readonly REPLACE_PARAM = '{mli-param}';\n  @Input() uiCaptionParam: string = '';\n  @Input() fieldId: any;\n\n  /**\n   * Provides string value from fieldId input and provides translation based on current language.\n   * Replaces {mli-param} parameter from .json field with uiCaptionParam value.\n   * @returns {string} String value of fieldId.\n   */\n  get caption(): string {\n    if (typeof this.fieldId == 'string') {\n      let text = this.translatePipe.transform(this.fieldId);\n      text = text.replace(this.REPLACE_PARAM, this.uiCaptionParam || '');\n      return text;\n    }\n    return this.fieldId;\n  }\n\n  constructor(public translatePipe: CdsLangPipe) {}\n\n  @HostBinding('attr.id') id: string = '';\n}\n","<p *ngIf=\"caption\" [innerHTML]=\"caption\"></p>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdsLangPipe } from '@cds/ng-core/lang';\n\nimport { MLCaptionComponent } from './caption.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MLCaptionComponent],\n  exports: [MLCaptionComponent],\n  providers: [CdsLangPipe]\n})\nexport class MLCaptionModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AdobeAnalyticsService } from '@cds/ng-adobe-analytics';\nimport { CdsLangService } from '@cds/ng-core/lang';\nimport { CdsBottomSheetRef } from '@cds/ng-ionic-components/bottom-sheet';\n\n@Component({\n  selector: 'lib-turn-on-notifications',\n  templateUrl: './turn-on-notifications-sheet.component.html',\n  styleUrls: ['./turn-on-notifications-sheet.component.css'],\n})\nexport class TurnOnNotificationsSheet implements OnInit {\n  @Output() isProceed = new EventEmitter<boolean>();\n\n  constructor(\n    private sheetRef: CdsBottomSheetRef<TurnOnNotificationsSheet>,\n    private adobeAnalytics: AdobeAnalyticsService,\n    private cdsLangService: CdsLangService\n  ) {}\n\n  ngOnInit(): void {\n    this.adobeAnalytics.trackCommonEvent('popUpDisplay', {\n      title:\n        this.getTranslation('notifications_turn_on_popup_title') ??\n        'Turn on notifications',\n    });\n  }\n\n  cancel() {\n    this.adobeAnalytics.trackCommonEvent('buttonClick', {\n      label: this.getTranslation('notifications_turn_on_cta1') ?? 'Not now',\n    });\n    this.isProceed.emit(false);\n    this.sheetRef.dismiss();\n  }\n\n  proceed() {\n    this.adobeAnalytics.trackCommonEvent('buttonClick', {\n      label: this.getTranslation('notifications_turn_on_cta2') ?? 'Turn on',\n    });\n    this.isProceed.emit(true);\n    this.sheetRef.dismiss();\n  }\n\n  private getTranslation(key: string): string {\n    const entries = this.cdsLangService.getLangEntriesById(key);\n    return entries ? entries['en'] : null;\n  }\n}\n","<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_on_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_on_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CdsLangPipe } from '@cds/ng-core/lang';\nimport { CdsButtonModule } from '@cds/ng-web-components/button';\n\nimport { TurnOnNotificationsSheet } from './turn-on-notifications-sheet.component';\nimport { MLCaptionModule } from '../caption/caption.module';\n\n@NgModule({\n  imports: [CommonModule, MLCaptionModule, CdsButtonModule],\n  declarations: [TurnOnNotificationsSheet],\n  exports: [TurnOnNotificationsSheet],\n  providers: [CdsLangPipe],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class TurnOnNotificationsSheetModule {}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { AdobeAnalyticsService } from '@cds/ng-adobe-analytics';\nimport { CdsLangService } from '@cds/ng-core/lang';\nimport { CdsBottomSheetRef } from '@cds/ng-ionic-components/bottom-sheet';\n\n@Component({\n  selector: 'lib-turn-off-notifications',\n  templateUrl: './turn-off-notifications-sheet.component.html',\n  styleUrls: ['./turn-off-notifications-sheet.component.css'],\n})\nexport class TurnOffNotificationsSheet implements OnInit {\n  @Output() isProceed = new EventEmitter<boolean>();\n\n  constructor(\n    private sheetRef: CdsBottomSheetRef<TurnOffNotificationsSheet>,\n    private adobeAnalytics: AdobeAnalyticsService,\n    private cdsLangService: CdsLangService\n  ) {}\n\n  ngOnInit(): void {\n    this.adobeAnalytics.trackCommonEvent('popUpDisplay', {\n      title:\n        this.getTranslation('notifications_turn_off_popup_title') ??\n        'Turn off notifications',\n    });\n  }\n\n  cancel() {\n    this.adobeAnalytics.trackCommonEvent('buttonClick', {\n      label: this.getTranslation('notifications_turn_off_cta1') ?? 'Not now',\n    });\n    this.isProceed.emit(false);\n    this.sheetRef.dismiss();\n  }\n\n  proceed() {\n    this.adobeAnalytics.trackCommonEvent('buttonClick', {\n      label: this.getTranslation('notifications_turn_off_cta2') ?? 'Turn off',\n    });\n    this.isProceed.emit(true);\n    this.sheetRef.dismiss();\n  }\n\n  private getTranslation(key: string): string {\n    const entries = this.cdsLangService.getLangEntriesById(key);\n    return entries ? entries['en'] : null;\n  }\n}\n","<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_off_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_off_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CdsLangPipe } from '@cds/ng-core/lang';\nimport { CdsButtonModule } from '@cds/ng-web-components/button';\n\nimport { TurnOffNotificationsSheet } from './turn-off-notifications-sheet.component';\nimport { MLCaptionModule } from '../caption/caption.module';\n\n@NgModule({\n  imports: [CommonModule, MLCaptionModule, CdsButtonModule],\n  declarations: [TurnOffNotificationsSheet],\n  exports: [TurnOffNotificationsSheet],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [CdsLangPipe]\n})\nexport class TurnOffNotificationsSheetModule {}\n","export const TOGGLE_TYPE = {\n  TURN_ON: 'turn_on',\n  TURN_OFF: 'turn_off',\n};\n\nexport const NotificationEvent = {\n  notificationWillDisplay: 'notificationWillDisplayEvent',\n  notificationClick: 'notificationClickEvent',\n};\n","export enum NotiSessionStorageKeys {\n  ONE_SIGNAL_ID = 'ONE_SIGNAL_ID',\n  ONE_SIGNAL_SUBSCRIPTION_ID = 'ONE_SIGNAL_SUBSCRIPTION_ID',\n  NOTIFICATIONS_DATA = 'NOTIFICATIONS_DATA',\n  KEY_ONE_SIGNAL_REGISTERED = 'KEY_ONE_SIGNAL_REGISTERED',\n  KEY_NOTIFICATION_STATUS = 'KEY_NOTIFICATION_STATUS',\n}\n","export enum RequestHeader {\n  AUTHORIZATION = 'AUTHORIZATION',\n  X_API_KEY = 'X-API-KEY',\n  CONTENT_TYPE = 'Content-Type',\n  ORIGIN = 'Origin',\n  X_MOBILE_APP = 'X-MOBILE-APP',\n  X_MOBILE_PLATFORM = 'X-MOBILE-PLATFORM'\n}\n","import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n  HttpParams as AngularHttpParams,\n} from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n  HttpOptions,\n  CapacitorHttp,\n  HttpResponse,\n  HttpParams as CapacitorHttpParams,\n} from '@capacitor/core';\nimport { isPlatform } from '@ionic/angular';\nimport { Observable, from } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { RequestHeader } from './request-header.enum';\n\ntype HttpParams = AngularHttpParams | CapacitorHttpParams;\n\nexport const MOBILE_APP_HTTP_ORIGIN = new InjectionToken<string>(\n  'MOBILE_APP_HTTP_ORIGIN'\n);\n\ninterface CapacitorHttpResponse extends HttpResponse {\n  error?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpProvider {\n  private _cookies = new Map<string, string>();\n  private isCapacitor = isPlatform('capacitor');\n\n  constructor(\n    private _http: HttpClient,\n    @Optional()\n    @Inject(MOBILE_APP_HTTP_ORIGIN)\n    private mobileAppHttpOrigin?: string\n  ) {\n    this.isCapacitor = isPlatform('capacitor');\n  }\n\n  private buildCapacitorHeaders(method: string, url: string) {\n    const origin = this.mobileAppHttpOrigin || window.location.origin;\n    const header = {\n      [RequestHeader.CONTENT_TYPE]: 'application/json',\n      // [RequestHeader.ORIGIN]: origin,\n      [RequestHeader.X_MOBILE_APP]: 'capacitor',\n      [RequestHeader.X_MOBILE_PLATFORM]: isPlatform('ios') ? 'ios' : 'android',\n    };\n    return header;\n  }\n\n  get<T>(\n    url: string,\n    _options?: {\n      headers?: HttpHeaders;\n      withCredentials?: boolean;\n      params?: HttpParams;\n    }\n  ): Observable<T> {\n    if (this.isCapacitor) {\n      const _url = new URL(url);\n      _url.searchParams;\n\n      const options: HttpOptions = {\n        headers: {\n          ...this.buildCapacitorHeaders('GET', url),\n          ..._options?.headers,\n        },\n        url,\n        params: _options?.params as CapacitorHttpParams,\n      };\n      const startTime = new Date();\n\n      return from(CapacitorHttp.get(options)).pipe(\n        map((response) =>\n          this.handleCapacitorHttpRequest<T>(response, startTime)\n        ),\n        catchError((error) => {\n          throw error;\n        })\n      );\n    }\n\n    return this._http.get<T>(url, _options);\n  }\n\n  post<T>(\n    url: string,\n    body: any,\n    _options?: { headers?: HttpHeaders | any; withCredentials?: boolean }\n  ): Observable<T> {\n    if (this.isCapacitor) {\n      const options: HttpOptions = {\n        headers: {\n          ...this.buildCapacitorHeaders('POST', url),\n          ..._options?.headers,\n        },\n        url,\n        data: body || undefined,\n      };\n      const startTime = new Date();\n      return from(CapacitorHttp.post(options)).pipe(\n        map((response) =>\n          this.handleCapacitorHttpRequest<T>(response, startTime)\n        )\n      );\n    }\n    return this._http.post<T>(url, body, _options);\n  }\n\n  handleCapacitorHttpRequest<T>(\n    response: Partial<CapacitorHttpResponse>,\n    startTime?: Date\n  ): T {\n    if (startTime) {\n      const endTime = new Date();\n      const timeToComplete = endTime.getTime() - startTime.getTime();\n      console.log(\n        `Time to complete request ${response.url}: ${timeToComplete}`\n      );\n    }\n\n    if (response?.error || response?.status >= 400) {\n      const error =\n        typeof response.data === 'string'\n          ? JSON.parse(response.data)\n          : response.data;\n      throw new HttpErrorResponse({\n        ...response,\n        error,\n        url: response.url,\n        status: response.status,\n        headers: response.headers as unknown as HttpHeaders,\n      });\n    }\n    const headers = response?.headers;\n\n    if (headers) {\n      Object.entries(headers).forEach(([key, value]) => {\n        if (key.toLowerCase() === 'set-cookie') {\n          this.addCookies(value);\n        }\n      });\n    }\n\n    return response?.data as T;\n  }\n\n  addCookies(cookies: string) {\n    const _cookies = cookies.split(', ');\n    _cookies.forEach((cookie) => {\n      const [key, value] = cookie.split('=');\n      if (value) {\n        this._cookies.set(key, value);\n      }\n    });\n  }\n\n  clearCookies() {\n    this._cookies.clear();\n  }\n\n  get cookies(): string {\n    const cookies = [];\n    for (let [key, value] of this._cookies.entries()) {\n      cookies.push(`${key}=${value}`);\n    }\n    return cookies.join('; ');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Capacitor } from '@capacitor/core';\nimport { Preferences } from '@capacitor/preferences';\nimport { CdsLangService } from '@cds/ng-core/lang';\nimport { Platform } from '@ionic/angular';\nimport {\n  Observable,\n  Subject,\n  catchError,\n  first,\n  from,\n  map,\n  of,\n  switchMap,\n  take,\n} from 'rxjs';\nimport { NotiConfigurations } from './config/configurations';\nimport { NotiApi } from './config/noti-api';\nimport { NotiSessionStorageKeys } from './const/session-storage-keys';\nimport { HttpProvider } from './http-service/http.provider.service';\nimport { NotificationEvent } from './const/notifications-const';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationsService {\n  private host: NotiApi;\n  private _notificationSubData: Subject<any>;\n  private _loadLocalizationSub: Subject<boolean> = null;\n  private PERMISSION_REQUESTED_STATUS = 'notification_permission_requested';\n  private onInitCompleted = false;\n  private onLoadingLocalization = false;\n  private config: NotiConfigurations;\n  private needLoadLocalization = false;\n\n  constructor(\n    private platform: Platform,\n    private http: HttpProvider,\n    private cdsLang: CdsLangService\n  ) {\n    this.handleOnNotificationsClick();\n    this.handleOnForegroundWillDisplay();\n  }\n\n  public getNotificationSubData(): Subject<any> {\n    return this._notificationSubData;\n  }\n\n  setupPushNotifications(\n    oneSignalAppId: string = '',\n    host: NotiApi,\n    config: NotiConfigurations,\n    needLoadLocalization: boolean = false\n  ): Subject<any> {\n    this._notificationSubData = new Subject();\n    this.host = host;\n    this.config = config;\n    this.needLoadLocalization = needLoadLocalization;\n    if (Capacitor.isNativePlatform()) {\n      this.platform.ready().then(() => {\n        console.log(\n          '==>setupPushNotification-oneSignalAppID:>> ' + oneSignalAppId\n        );\n        if (!oneSignalAppId) {\n          console.log('==>setupPushNotification failed-invalid appId');\n          return;\n        }\n\n        (window as any).plugins.OneSignal.Notifications.addEventListener(\n          'click',\n          this.onNotificationsClick\n        );\n        (window as any).plugins.OneSignal.Notifications.addEventListener(\n          'foregroundWillDisplay',\n          this.foregroundWillDisplay\n        );\n        (window as any).plugins.OneSignal.initialize(oneSignalAppId);\n\n        // Prompts the user for notification permissions.\n        // Since this shows a generic native prompt, we recommend instead using an In-App Message to prompt for notification permission (See step 7) to better communicate to your users what notifications they will get.\n        this.checkToRequestPermissions();\n        this.loadLocalizationSub().subscribe((status) => {\n          console.log('==>noti service load lz success :>> ', status);\n        });\n        this.loadLocalization();\n      });\n    }\n    return this._notificationSubData;\n  }\n\n  private checkToRequestPermissions() {\n    this.getPermissionRequestedStatus().then((status) => {\n      if (status) {\n        console.log('==>checkToRequestPermissions- requested already');\n        return;\n      }\n      (window as any).plugins.OneSignal.Notifications.requestPermission(\n        true\n      ).then((accepted: boolean) => {\n        if (accepted) {\n          this.setPermissionRequestedStatus(true);\n        }\n      });\n    });\n  }\n\n  private onNotificationsClick(data: any) {\n    const customEvent = new CustomEvent('handleOnNotificationsClick', {\n      detail: {\n        data: data,\n      },\n    });\n    // dispatch event to resolve OneSignal's listener scode issues.\n    window.dispatchEvent(customEvent);\n  }\n\n  private handleOnNotificationsClick() {\n    window.addEventListener('handleOnNotificationsClick', (event: any) => {\n      var data = event.detail.data;\n      const additionaldata = data?.notification?.additionalData;\n      console.log('==>handleOnNotificationsClick:>> ', JSON.stringify(data));\n      const deepLinkData = this.parseDeeplink(additionaldata);\n      this._notificationSubData.next(deepLinkData);\n    });\n  }\n\n  /**\n   * @returns data = {\n      pushNotificationId: '123',\n      eventType: notificationWillDisplayEvent or notificationClickEvent\n      deepLinkType: 'app',\n      landingPage: {\n        vi: 'portfolio',\n        en: 'portfolio'\n      },\n      mode: 'in-app'\n    };\n   */\n  private parseDeeplink(additionaldata: any): any {\n    const landingPage = additionaldata?.landingPage;\n    if (landingPage && this.isValidLandingPage(landingPage)) {\n      const data = {\n        eventType: NotificationEvent.notificationClick,\n        pushNotificationId: additionaldata?.pushNotificationId,\n        deepLinkType: 'app',\n        landingPage: {\n          en: landingPage,\n        },\n        mode: 'in-app',\n      };\n      return data;\n    } else if (additionaldata?.externalLink) {\n      try {\n        const externalLink = JSON.parse(additionaldata?.externalLink);\n        const data = {\n          eventType: NotificationEvent.notificationClick,\n          pushNotificationId: additionaldata?.pushNotificationId,\n          deepLinkType: 'website',\n          landingPage: externalLink?.urls,\n          mode: externalLink?.mode,\n        };\n        return data;\n      } catch (error) {\n        console.log('==>parseDeeplink - parse data error :>> ', error);\n      }\n    } else {\n      const data = {\n        eventType: NotificationEvent.notificationClick,\n        pushNotificationId: additionaldata?.pushNotificationId,\n        landingPage: null,\n      };\n      return data;\n    }\n  }\n\n  private foregroundWillDisplay(data: any) {\n    const customEvent = new CustomEvent('handleOnForegroundWillDisplay', {\n      detail: {\n        data: data,\n      },\n    });\n    // dispatch event to resolve OneSignal's listener scode issues.\n    window.dispatchEvent(customEvent);\n  }\n\n  private handleOnForegroundWillDisplay() {\n    window.addEventListener('handleOnForegroundWillDisplay', (event: any) => {\n      const eventData = {\n        eventType: NotificationEvent.notificationWillDisplay,\n        data: event?.detail?.data,\n      };\n      this._notificationSubData.next(eventData);\n    });\n  }\n\n  private isValidLandingPage(landingPage: string): boolean {\n    // TODO: implement logic to validate url\n    if (landingPage) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private getOnSignalSubscritionId(): Observable<any> {\n    if (!Capacitor.isNativePlatform()) {\n      return of('');\n    }\n    try {\n      return from(\n        (window as any).plugins.OneSignal.User.pushSubscription.getIdAsync()\n      );\n    } catch (error) {\n      return of('');\n    }\n  }\n\n  public setNotificationsData(data: any) {\n    const value = JSON.stringify(data);\n    Preferences.set({\n      key: NotiSessionStorageKeys.NOTIFICATIONS_DATA,\n      value: value,\n    });\n  }\n\n  public async getNotificationsData(): Promise<any> {\n    return (\n      await Preferences.get({ key: NotiSessionStorageKeys.NOTIFICATIONS_DATA })\n    )?.value;\n  }\n\n  registerNotifications(\n    mcfId: string,\n    lang: string,\n    apiCredentials: any = {},\n    updateLanguageOnly: boolean = false\n  ): Observable<any> {\n    if (!mcfId) {\n      console.log('==>registerNotifications failed-invalid data');\n      return of(null);\n    }\n    return this.getOnSignalSubscritionId().pipe(\n      switchMap((subId) => {\n        if (Capacitor.isNativePlatform() && !subId) {\n          return of(null);\n        }\n        const data = {\n          deviceId: subId,\n          language: lang,\n          mcfId: mcfId,\n          updateLanguageOnly: updateLanguageOnly,\n        };\n        const url = this.getHealthApiUrl(this.host);\n        return this.http.post(url, data, { headers: apiCredentials }).pipe(\n          take(1),\n          map((response: any) => response),\n          catchError((err) => {\n            console.log(\n              '==>registerNotifications error :>> ' + JSON.stringify(err)\n            );\n            return of(null);\n          })\n        );\n      })\n    );\n  }\n\n  private getHealthApiUrl(host: NotiApi) {\n    return `${host.uri}/${host.version}/${host.endpoint}`;\n  }\n\n  private setPermissionRequestedStatus(status: boolean) {\n    Preferences.set({\n      key: NotiSessionStorageKeys.KEY_ONE_SIGNAL_REGISTERED,\n      value: status ? this.PERMISSION_REQUESTED_STATUS : '',\n    });\n  }\n\n  private async getPermissionRequestedStatus(): Promise<boolean> {\n    return (\n      (\n        await Preferences.get({\n          key: NotiSessionStorageKeys.KEY_ONE_SIGNAL_REGISTERED,\n        })\n      )?.value === this.PERMISSION_REQUESTED_STATUS\n    );\n  }\n\n  loadLocalizationSub(): Subject<boolean> {\n    if (this._loadLocalizationSub === null) {\n      this._loadLocalizationSub = new Subject();\n    }\n    return this._loadLocalizationSub;\n  }\n\n  loadLocalization() {\n    if (!this.needLoadLocalization) {\n      this.onInitCompleted = true;\n      this._loadLocalizationSub.next(true);\n      return;\n    }\n    if (!this.onLoadingLocalization) {\n      this.onLoadingLocalization = true;\n      this.loadLocalizationFromRemote().subscribe((status) => {\n        console.log('==>loadLocalization-status :>> ', status);\n        this.onLoadingLocalization = false;\n        this.onInitCompleted = !!status;\n        this._loadLocalizationSub.next(!!status);\n      });\n    }\n  }\n\n  private loadLocalizationFromRemote(): Observable<boolean> {\n    if (!this.config || !this.config.localizeConfigPath) {\n      return of(false);\n    }\n    if (!this.onInitCompleted) {\n      return this.cdsLang\n        .addLangEntriesByUrl(this.config.localizeConfigPath)\n        .pipe(\n          first(),\n          map((data) => !!data),\n          catchError((err) => {\n            console.log(\n              '==>loadLocalizationFromRemote from remote-error: ',\n              JSON.stringify(err)\n            );\n            return this.loadLocalizationFromAssest();\n          })\n        );\n    } else {\n      return of(true);\n    }\n  }\n\n  private loadLocalizationFromAssest(): Observable<any> {\n    const localizeConfigPath = 'assets/localizations/notifications.json';\n    return this.cdsLang.addLangEntriesByUrl(localizeConfigPath).pipe(\n      first(),\n      map((data) => !!data),\n      catchError((err) => {\n        console.log(\n          '==>loadLocalizationFromAssest-error: ',\n          JSON.stringify(err)\n        );\n        return of(false);\n      })\n    );\n  }\n\n  saveNotificationStatus(status: boolean) {\n    Preferences.set({\n      key: NotiSessionStorageKeys.KEY_NOTIFICATION_STATUS,\n      value: status ? 'on' : 'off',\n    });\n  }\n\n  async getSavedNotificationStatus(): Promise<boolean | undefined> {\n    const data = await Preferences.get({\n      key: NotiSessionStorageKeys.KEY_NOTIFICATION_STATUS,\n    });\n    if (!data || !data?.value) {\n      return undefined;\n    }\n    return data?.value === 'on';\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { App } from '@capacitor/app';\nimport { CdsLangPipe, CdsLangService } from '@cds/ng-core/lang';\nimport {\n  CdsBottomSheetRef,\n  CdsBottomSheetService,\n} from '@cds/ng-ionic-components/bottom-sheet';\nimport {\n  Observable,\n  Subject,\n  catchError,\n  distinctUntilChanged,\n  finalize,\n  map,\n  of,\n  switchMap,\n  take,\n} from 'rxjs';\n\nimport { Notifications } from '@reg/ng-notification-plugin';\nimport { NotiConfigurations } from './config/configurations';\nimport { TOGGLE_TYPE } from './const/notifications-const';\nimport { TurnOffNotificationsSheet } from './modules/turn-off-notifications-sheet/turn-off-notifications-sheet.component';\nimport { TurnOnNotificationsSheet } from './modules/turn-on-notifications-sheet/turn-on-notifications-sheet.component';\nimport { NotificationsService } from './ng-notification-controller.service';\nimport { AdobeAnalyticsService } from '@cds/ng-adobe-analytics';\nimport { Capacitor } from '@capacitor/core';\n\n@Component({\n  selector: 'ng-notification-controller',\n  templateUrl: './ng-notification-controller.component.html',\n  styleUrls: ['./ng-notification-controller.component.css'],\n})\nexport class NgNotificationControllerComponent implements OnInit {\n  @Input() config: NotiConfigurations;\n  /**\n   * Emit the event in case user tap to the toggle only (does not apply for another cases)\n   */\n  @Output() onToggle: EventEmitter<any> = new EventEmitter();\n  appNotificationsStatus = false;\n  pushnotificationsControl = new FormControl(this.appNotificationsStatus);\n  pushNotificationsFeatureEnabled = false;\n  notificationLineItem = '';\n  private ignorePushNotiChange = false;\n  private initNotiSwitchInit = false;\n\n  private sessionCleaned$ = new Subject();\n\n  constructor(\n    private cdsBottomSheet: CdsBottomSheetService,\n    public translatePipe: CdsLangPipe,\n    private notificationsService: NotificationsService,\n    private cdsLangService: CdsLangService,\n    private adobeAnalytics: AdobeAnalyticsService\n  ) {}\n\n  ngOnInit(): void {\n    this.notificationsService.loadLocalizationSub().subscribe((success) => {\n      if (success) {\n        this.pushNotificationsFeatureEnabled = true;\n        this.initNotiSwitch();\n      }\n      console.log('==>noti controller load lz success :>> ', success);\n    });\n    this.notificationsService.loadLocalization();\n    App.addListener('resume', () => {\n      console.log('==>App Resume.');\n      this.checkNotiStatus(true);\n    });\n  }\n\n  private checkNotiStatus(trackAnalytic: boolean = false) {\n    this.getNotificationsStatus()\n      .pipe(map(({ enabled }) => enabled))\n      .subscribe((turnedOn) => {\n        console.log('==>checkNotiStatus:>> ', turnedOn);\n        if (turnedOn !== this.pushnotificationsControl.value) {\n          this.ignorePushNotiChange = true;\n          this.pushnotificationsControl.setValue(turnedOn);\n        }\n        if (trackAnalytic) {\n          this.notificationsService\n            .getSavedNotificationStatus()\n            .then((previousStatus) => {\n              console.log('==>previousStatus :>> ', previousStatus);\n              if (previousStatus === undefined || previousStatus === turnedOn) {\n                return;\n              }\n              // track in case the notification setting was changed\n              this.trackNotificationStatusChanged(turnedOn);\n            });\n        }\n        this.notificationsService.saveNotificationStatus(turnedOn);\n        this.appNotificationsStatus = turnedOn;\n      });\n  }\n\n  private initNotiSwitch() {\n    this.notificationLineItem = this.translatePipe.transform(\n      'notifications_line_item'\n    );\n    this.cdsLangService.currentLanguageObservable\n      .pipe(\n        map((lang) => {\n          this.notificationLineItem = this.translatePipe.transform(\n            'notifications_line_item'\n          );\n        })\n      )\n      .subscribe();\n    if (this.initNotiSwitchInit) {\n      return;\n    }\n    this.initNotiSwitchInit = true;\n    this.pushnotificationsControl.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        switchMap(\n          (enable): Observable<{ enabled: any; sendUpdate: boolean }> => {\n            if (this.ignorePushNotiChange) {\n              this.ignorePushNotiChange = false;\n              return of({ enabled: null, sendUpdate: false });\n            }\n            if (enable) {\n              return this.turnOnNotifications().pipe(\n                take(1),\n                map((enabled) => ({ enabled, sendUpdate: !enabled })),\n                catchError((error) => {\n                  return of({ enabled: false, sendUpdate: true });\n                })\n              );\n            } else {\n              return this.turnOffNotifications().pipe(\n                take(1),\n                map((disabled) => ({\n                  enabled: !disabled,\n                  sendUpdate: !disabled,\n                })),\n                catchError((error) => {\n                  return of({ enabled: true, sendUpdate: true });\n                })\n              );\n            }\n          }\n        )\n      )\n      .subscribe(({ enabled, sendUpdate }) => {\n        if (enabled !== null && sendUpdate) {\n          this.ignorePushNotiChange = true;\n          this.pushnotificationsControl.setValue(enabled);\n          this.appNotificationsStatus = enabled;\n        }\n      });\n    this.checkNotiStatus(true);\n  }\n\n  /**\n   * return true if notification was turned on\n   */\n  turnOnNotifications(): Observable<boolean> {\n    const sheet = this.cdsBottomSheet.open(TurnOnNotificationsSheet, {\n      disableClose: true,\n      showHandleBar: false,\n    });\n\n    this.sessionCleaned$.pipe(take(1)).subscribe(() => {\n      this.closeSheet(sheet);\n    });\n\n    return sheet.instance.isProceed.pipe(\n      take(1),\n      switchMap((isProceed) => {\n        this.emitToggleValues(TOGGLE_TYPE.TURN_ON, isProceed);\n        if (isProceed) {\n          return this.startTurnOnNotifications().pipe(\n            map((success) => success),\n            catchError(() => {\n              return of(false);\n            })\n          );\n        } else {\n          return of(false);\n        }\n      }),\n      finalize(() => {\n        sheet.dismiss();\n      })\n    );\n  }\n\n  /**\n   * return true if notification was turned on\n   */\n  private startTurnOnNotifications(): Observable<boolean> {\n    return new Observable((observer) => {\n      Notifications.openNotificationsSetting().then((notificationStatus) => {\n        observer.next(notificationStatus.enabled);\n      });\n    });\n  }\n\n  /**\n   * return true if notification was turned off\n   */\n  turnOffNotifications(): Observable<boolean> {\n    const sheet = this.cdsBottomSheet.open(TurnOffNotificationsSheet, {\n      disableClose: true,\n      showHandleBar: false,\n    });\n\n    this.sessionCleaned$.pipe(take(1)).subscribe(() => {\n      this.closeSheet(sheet);\n    });\n\n    return sheet.instance.isProceed.pipe(\n      take(1),\n      switchMap((isProceed) => {\n        this.emitToggleValues(TOGGLE_TYPE.TURN_OFF, isProceed);\n        if (isProceed) {\n          return this.startTurnOffNotifications().pipe(\n            map((success) => success),\n            catchError(() => {\n              return of(false);\n            })\n          );\n        } else {\n          return of(false);\n        }\n      }),\n      finalize(() => {\n        sheet.dismiss();\n      })\n    );\n  }\n\n  /**\n   * return true if notification was turned off\n   */\n  private startTurnOffNotifications(): Observable<boolean> {\n    return new Observable((observer) => {\n      Notifications.openNotificationsSetting().then((notificationStatus) => {\n        observer.next(!notificationStatus.enabled);\n      });\n    });\n  }\n\n  getNotificationsStatus(): Observable<{ enabled: boolean }> {\n    return new Observable((observer) => {\n      Notifications.getNotificationsStatus().then((notificationStatus) => {\n        observer.next({ enabled: notificationStatus.enabled });\n      });\n    });\n  }\n\n  closeSheet(sheet?: CdsBottomSheetRef) {\n    if (sheet) {\n      sheet.dismiss();\n    }\n  }\n\n  /**\n   * \n   * @param type \n   * @param isProceed \n   * @returns {\n        type: turn_on/turn_off,\n        isProceed: true/false (ok/cancel),\n        actionName: The cta button label\n   */\n  private emitToggleValues(type: string, isProceed: boolean) {\n    if (isProceed) {\n      this.smockDataForTesting(type);\n    }\n\n    // TODO: remove the following logic since the EDDL will be handled inside the lib, so don't need to expose the event\n    if (type === TOGGLE_TYPE.TURN_OFF) {\n      this.onToggle.emit({\n        type: type,\n        isProceed: isProceed,\n        actionName: isProceed\n          ? this.translatePipe.transform('notifications_turn_off_cta2')\n          : this.translatePipe.transform('notifications_turn_off_cta1'),\n      });\n    }\n    if (type === TOGGLE_TYPE.TURN_ON) {\n      this.onToggle.emit({\n        type: type,\n        isProceed: isProceed,\n        actionName: isProceed\n          ? this.translatePipe.transform('notifications_turn_on_cta2')\n          : this.translatePipe.transform('notifications_turn_on_cta1'),\n      });\n    }\n  }\n\n  private trackNotificationStatusChanged(status: boolean) {\n    const EVENT = 'toggleChange';\n    const eventInfo = {\n      event: EVENT,\n      eventInfo: {\n        toggle: {\n          name: 'Notification',\n          value: status ? 'On' : 'Off',\n        },\n      },\n    };\n    this.adobeAnalytics.trackEvent(EVENT, eventInfo);\n    console.log(\n      '==>trackNotificationStatusChanged :>> ',\n      JSON.stringify(eventInfo)\n    );\n  }\n\n  /**\n   * This is native feature, just provide the analytic tracking for adobeDataLayer debug on web\n   */\n  private smockDataForTesting(type: string) {\n    if (Capacitor.isNativePlatform()) {\n      return;\n    }\n    this.trackNotificationStatusChanged(type === TOGGLE_TYPE.TURN_ON);\n  }\n}\n","<cds-switch\n  [formControl]=\"pushnotificationsControl\"\n  [config]=\"{\n    label: notificationLineItem,\n    value: appNotificationsStatus\n  }\"\n  *ngIf=\"pushNotificationsFeatureEnabled\"\n  id=\"notifications_line_item\"\n></cds-switch>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgNotificationControllerComponent } from './ng-notification-controller.component';\nimport { MLCaptionModule } from './modules/caption/caption.module';\nimport { TurnOnNotificationsSheetModule } from './modules/turn-on-notifications-sheet/turn-on-notifications-sheet.module';\nimport { TurnOffNotificationsSheetModule } from './modules/turn-off-notifications-sheet/turn-off-notifications-sheet.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CdsLanguageModule } from '@cds/ng-core/lang';\nimport { CdsBottomSheetModule } from '@cds/ng-ionic-components/bottom-sheet';\nimport { CdsIonSwitchModule } from '@cds/ng-ionic-components/switch';\nimport { CdsIonTopBarModule } from '@cds/ng-ionic-components/top-bar';\nimport { CdsButtonModule } from '@cds/ng-web-components/button';\nimport { CdsIconModule } from '@cds/ng-web-components/icon';\nimport { CdsPopupModule } from '@cds/ng-web-components/popup';\n\n@NgModule({\n  declarations: [NgNotificationControllerComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    CdsLanguageModule,\n    CdsBottomSheetModule,\n    CdsIonTopBarModule,\n    CdsButtonModule,\n    CdsIconModule,\n    CdsPopupModule,\n    MLCaptionModule,\n    TurnOnNotificationsSheetModule,\n    TurnOffNotificationsSheetModule,\n    CdsIonSwitchModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: [NgNotificationControllerComponent]\n})\n\n\nexport class NgNotificationControllerModule {}\n","\nexport class NotiConfigurations {\n   localizeConfigPath?: string;\n   retryGetSubIdCount?: number;\n}\n","\nexport class NotiApi {\n  public uri: string;\n  public version: string;\n  public endpoint: string;\n  constructor() {\n    this.uri = '';\n    this.version = '';\n    this.endpoint = '';\n  }\n}\n","/*\n * Public API Surface of ng-notification-controller\n */\n\n/**\n * Caption Components\n */\nexport * from './lib/modules/caption/caption.component';\nexport * from './lib/modules/caption/caption.module';\n\n/**\n * Turn On Notification Sheet Components\n */\nexport * from './lib/modules/turn-on-notifications-sheet/turn-on-notifications-sheet.component';\nexport * from './lib/modules/turn-on-notifications-sheet/turn-on-notifications-sheet.module';\n\n/**\n * Turn Off Notification Sheet Components\n */\nexport * from './lib/modules/turn-off-notifications-sheet/turn-off-notifications-sheet.component';\nexport * from './lib/modules/turn-off-notifications-sheet/turn-off-notifications-sheet.module';\n\n/**\n * Ng Notification Components\n */\n\nexport * from './lib/ng-notification-controller.component';\nexport * from './lib/ng-notification-controller.service';\nexport * from './lib/ng-notification-controller.module';\n\n/**\n * Services\n */\n\nexport * from './lib/http-service/http.provider.service';\n\n/**\n * Config\n */\nexport * from './lib/config/configurations';\nexport * from './lib/config/noti-api';\n\n/**\n * Const\n */\nexport * from './lib/const/notifications-const';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i4.MLCaptionComponent","map","catchError","i2.HttpProvider","i3.NotificationsService","i4","i5"],"mappings":"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"}