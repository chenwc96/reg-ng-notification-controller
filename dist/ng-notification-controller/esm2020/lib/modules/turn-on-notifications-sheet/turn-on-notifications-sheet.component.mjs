import { Component, EventEmitter, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@cds/ng-ionic-components/bottom-sheet";
import * as i2 from "@cds/ng-adobe-analytics";
import * as i3 from "@cds/ng-core/lang";
import * as i4 from "../caption/caption.component";
import * as i5 from "@cds/ng-web-components/button";
export class TurnOnNotificationsSheet {
    constructor(sheetRef, adobeAnalytics, cdsLangService) {
        this.sheetRef = sheetRef;
        this.adobeAnalytics = adobeAnalytics;
        this.cdsLangService = cdsLangService;
        this.isProceed = new EventEmitter();
    }
    ngOnInit() {
        this.adobeAnalytics.trackCommonEvent('popUpDisplay', {
            title: this.getTranslation('notifications_turn_on_popup_title') ??
                'Turn on notifications',
        });
    }
    cancel() {
        this.adobeAnalytics.trackCommonEvent('buttonClick', {
            label: this.getTranslation('notifications_turn_on_cta1') ?? 'Not now',
        });
        this.isProceed.emit(false);
        this.sheetRef.dismiss();
    }
    proceed() {
        this.adobeAnalytics.trackCommonEvent('buttonClick', {
            label: this.getTranslation('notifications_turn_on_cta2') ?? 'Turn on',
        });
        this.isProceed.emit(true);
        this.sheetRef.dismiss();
    }
    getTranslation(key) {
        const entries = this.cdsLangService.getLangEntriesById(key);
        return entries ? entries['en'] : null;
    }
}
TurnOnNotificationsSheet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TurnOnNotificationsSheet, deps: [{ token: i1.CdsBottomSheetRef }, { token: i2.AdobeAnalyticsService }, { token: i3.CdsLangService }], target: i0.ɵɵFactoryTarget.Component });
TurnOnNotificationsSheet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: TurnOnNotificationsSheet, selector: "lib-turn-on-notifications", outputs: { isProceed: "isProceed" }, ngImport: i0, template: "<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_on_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_on_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n", styles: ["@import\"../../../../../../node_modules/@cds/style-dictionary/css/_grid.css\";.noti-popup{width:100%;padding-top:var(--cds-spacing-06);padding-bottom:calc(var(--cds-spacing-04) + var(--ion-safe-area-bottom))}.row,.actions{gap:var(--cds-spacing-04)}.actions{display:flex;justify-content:space-between}.cta{flex-grow:1}.cds-body-hero{margin:0}\n"], dependencies: [{ kind: "component", type: i4.MLCaptionComponent, selector: "ml-caption", inputs: ["uiCaptionParam", "fieldId"] }, { kind: "component", type: i5.CdsButtonComponent, selector: "cds-button" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TurnOnNotificationsSheet, decorators: [{
            type: Component,
            args: [{ selector: 'lib-turn-on-notifications', template: "<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_on_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_on_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      [fullWidth]=\"true\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_on_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n", styles: ["@import\"../../../../../../node_modules/@cds/style-dictionary/css/_grid.css\";.noti-popup{width:100%;padding-top:var(--cds-spacing-06);padding-bottom:calc(var(--cds-spacing-04) + var(--ion-safe-area-bottom))}.row,.actions{gap:var(--cds-spacing-04)}.actions{display:flex;justify-content:space-between}.cta{flex-grow:1}.cds-body-hero{margin:0}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.CdsBottomSheetRef }, { type: i2.AdobeAnalyticsService }, { type: i3.CdsLangService }]; }, propDecorators: { isProceed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHVybi1vbi1ub3RpZmljYXRpb25zLXNoZWV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLW5vdGlmaWNhdGlvbi1jb250cm9sbGVyL3NyYy9saWIvbW9kdWxlcy90dXJuLW9uLW5vdGlmaWNhdGlvbnMtc2hlZXQvdHVybi1vbi1ub3RpZmljYXRpb25zLXNoZWV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLW5vdGlmaWNhdGlvbi1jb250cm9sbGVyL3NyYy9saWIvbW9kdWxlcy90dXJuLW9uLW5vdGlmaWNhdGlvbnMtc2hlZXQvdHVybi1vbi1ub3RpZmljYXRpb25zLXNoZWV0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFVLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7OztBQVV4RSxNQUFNLE9BQU8sd0JBQXdCO0lBR25DLFlBQ1UsUUFBcUQsRUFDckQsY0FBcUMsRUFDckMsY0FBOEI7UUFGOUIsYUFBUSxHQUFSLFFBQVEsQ0FBNkM7UUFDckQsbUJBQWMsR0FBZCxjQUFjLENBQXVCO1FBQ3JDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUw5QixjQUFTLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztJQU0vQyxDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsY0FBYyxFQUFFO1lBQ25ELEtBQUssRUFDSCxJQUFJLENBQUMsY0FBYyxDQUFDLG1DQUFtQyxDQUFDO2dCQUN4RCx1QkFBdUI7U0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELE1BQU07UUFDSixJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRTtZQUNsRCxLQUFLLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyw0QkFBNEIsQ0FBQyxJQUFJLFNBQVM7U0FDdEUsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFO1lBQ2xELEtBQUssRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLDRCQUE0QixDQUFDLElBQUksU0FBUztTQUN0RSxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFTyxjQUFjLENBQUMsR0FBVztRQUNoQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVELE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUN4QyxDQUFDOztzSEFwQ1Usd0JBQXdCOzBHQUF4Qix3QkFBd0Isc0dDVnJDLGtzQkF5QkE7NEZEZmEsd0JBQXdCO2tCQUxwQyxTQUFTOytCQUNFLDJCQUEyQjt5S0FLM0IsU0FBUztzQkFBbEIsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPbkluaXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWRvYmVBbmFseXRpY3NTZXJ2aWNlIH0gZnJvbSAnQGNkcy9uZy1hZG9iZS1hbmFseXRpY3MnO1xuaW1wb3J0IHsgQ2RzTGFuZ1NlcnZpY2UgfSBmcm9tICdAY2RzL25nLWNvcmUvbGFuZyc7XG5pbXBvcnQgeyBDZHNCb3R0b21TaGVldFJlZiB9IGZyb20gJ0BjZHMvbmctaW9uaWMtY29tcG9uZW50cy9ib3R0b20tc2hlZXQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaWItdHVybi1vbi1ub3RpZmljYXRpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3R1cm4tb24tbm90aWZpY2F0aW9ucy1zaGVldC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3R1cm4tb24tbm90aWZpY2F0aW9ucy1zaGVldC5jb21wb25lbnQuY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIFR1cm5Pbk5vdGlmaWNhdGlvbnNTaGVldCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBPdXRwdXQoKSBpc1Byb2NlZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBzaGVldFJlZjogQ2RzQm90dG9tU2hlZXRSZWY8VHVybk9uTm90aWZpY2F0aW9uc1NoZWV0PixcbiAgICBwcml2YXRlIGFkb2JlQW5hbHl0aWNzOiBBZG9iZUFuYWx5dGljc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBjZHNMYW5nU2VydmljZTogQ2RzTGFuZ1NlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYWRvYmVBbmFseXRpY3MudHJhY2tDb21tb25FdmVudCgncG9wVXBEaXNwbGF5Jywge1xuICAgICAgdGl0bGU6XG4gICAgICAgIHRoaXMuZ2V0VHJhbnNsYXRpb24oJ25vdGlmaWNhdGlvbnNfdHVybl9vbl9wb3B1cF90aXRsZScpID8/XG4gICAgICAgICdUdXJuIG9uIG5vdGlmaWNhdGlvbnMnLFxuICAgIH0pO1xuICB9XG5cbiAgY2FuY2VsKCkge1xuICAgIHRoaXMuYWRvYmVBbmFseXRpY3MudHJhY2tDb21tb25FdmVudCgnYnV0dG9uQ2xpY2snLCB7XG4gICAgICBsYWJlbDogdGhpcy5nZXRUcmFuc2xhdGlvbignbm90aWZpY2F0aW9uc190dXJuX29uX2N0YTEnKSA/PyAnTm90IG5vdycsXG4gICAgfSk7XG4gICAgdGhpcy5pc1Byb2NlZWQuZW1pdChmYWxzZSk7XG4gICAgdGhpcy5zaGVldFJlZi5kaXNtaXNzKCk7XG4gIH1cblxuICBwcm9jZWVkKCkge1xuICAgIHRoaXMuYWRvYmVBbmFseXRpY3MudHJhY2tDb21tb25FdmVudCgnYnV0dG9uQ2xpY2snLCB7XG4gICAgICBsYWJlbDogdGhpcy5nZXRUcmFuc2xhdGlvbignbm90aWZpY2F0aW9uc190dXJuX29uX2N0YTInKSA/PyAnVHVybiBvbicsXG4gICAgfSk7XG4gICAgdGhpcy5pc1Byb2NlZWQuZW1pdCh0cnVlKTtcbiAgICB0aGlzLnNoZWV0UmVmLmRpc21pc3MoKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0VHJhbnNsYXRpb24oa2V5OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IGVudHJpZXMgPSB0aGlzLmNkc0xhbmdTZXJ2aWNlLmdldExhbmdFbnRyaWVzQnlJZChrZXkpO1xuICAgIHJldHVybiBlbnRyaWVzID8gZW50cmllc1snZW4nXSA6IG51bGw7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJyb3cgbm90aS1wb3B1cFwiPlxuICA8bWwtY2FwdGlvblxuICAgIFtmaWVsZElkXT1cIidub3RpZmljYXRpb25zX3R1cm5fb25fcG9wdXBfdGl0bGUnXCJcbiAgICBjbGFzcz1cImNvbC14cy0xMiBjZHMtYm9keS1oZXJvIGNkcy1saWdodFwiXG4gID48L21sLWNhcHRpb24+XG4gIDxtbC1jYXB0aW9uXG4gICAgW2ZpZWxkSWRdPVwiJ25vdGlmaWNhdGlvbnNfdHVybl9vbl9wb3B1cF9kZXNjJ1wiXG4gICAgY2xhc3M9XCJjb2wteHMtMTJcIlxuICA+PC9tbC1jYXB0aW9uPlxuICA8ZGl2IGNsYXNzPVwiY29sLXhzLTEyIGFjdGlvbnNcIj5cbiAgICA8Y2RzLWJ1dHRvblxuICAgICAgY2xhc3M9XCJjdGFcIlxuICAgICAgW2Z1bGxXaWR0aF09XCJ0cnVlXCJcbiAgICAgIFtjb25maWddPVwieyBzdHlsZTogJ3NlY29uZGFyeScgfVwiXG4gICAgICAoY2xpY2spPVwiY2FuY2VsKClcIlxuICAgICAgW2xhYmVsXT1cIidub3RpZmljYXRpb25zX3R1cm5fb25fY3RhMSdcIlxuICAgID48L2Nkcy1idXR0b24+XG4gICAgPGNkcy1idXR0b25cbiAgICAgIGNsYXNzPVwiY3RhXCJcbiAgICAgIFtmdWxsV2lkdGhdPVwidHJ1ZVwiXG4gICAgICAoY2xpY2spPVwicHJvY2VlZCgpXCJcbiAgICAgIFtsYWJlbF09XCInbm90aWZpY2F0aW9uc190dXJuX29uX2N0YTInXCJcbiAgICA+PC9jZHMtYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19