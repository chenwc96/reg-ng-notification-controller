import { Component, EventEmitter, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@cds/ng-ionic-components/bottom-sheet";
import * as i2 from "@cds/ng-adobe-analytics";
import * as i3 from "@cds/ng-core/lang";
import * as i4 from "../caption/caption.component";
import * as i5 from "@cds/ng-web-components/button";
export class TurnOffNotificationsSheet {
    constructor(sheetRef, adobeAnalytics, cdsLangService) {
        this.sheetRef = sheetRef;
        this.adobeAnalytics = adobeAnalytics;
        this.cdsLangService = cdsLangService;
        this.isProceed = new EventEmitter();
    }
    ngOnInit() {
        this.adobeAnalytics.trackCommonEvent('popUpDisplay', {
            title: this.getTranslation('notifications_turn_off_popup_title') ??
                'Turn off notifications',
        });
    }
    cancel() {
        this.adobeAnalytics.trackCommonEvent('buttonClick', {
            label: this.getTranslation('notifications_turn_off_cta1') ?? 'Not now',
        });
        this.isProceed.emit(false);
        this.sheetRef.dismiss();
    }
    proceed() {
        this.adobeAnalytics.trackCommonEvent('buttonClick', {
            label: this.getTranslation('notifications_turn_off_cta2') ?? 'Turn off',
        });
        this.isProceed.emit(true);
        this.sheetRef.dismiss();
    }
    getTranslation(key) {
        const entries = this.cdsLangService.getLangEntriesById(key);
        return entries ? entries['en'] : null;
    }
}
TurnOffNotificationsSheet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TurnOffNotificationsSheet, deps: [{ token: i1.CdsBottomSheetRef }, { token: i2.AdobeAnalyticsService }, { token: i3.CdsLangService }], target: i0.ɵɵFactoryTarget.Component });
TurnOffNotificationsSheet.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: TurnOffNotificationsSheet, selector: "lib-turn-off-notifications", outputs: { isProceed: "isProceed" }, ngImport: i0, template: "<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_off_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_off_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n", styles: ["@import\"../../../../../../node_modules/@cds/style-dictionary/css/_grid.css\";.noti-popup{width:100%;padding-top:var(--cds-spacing-06);padding-bottom:calc(var(--cds-spacing-04) + var(--ion-safe-area-bottom))}.row,.actions{gap:var(--cds-spacing-04)}.actions{display:flex;justify-content:space-between}.cta{flex-grow:1}.cds-body-hero{margin:0}\n"], dependencies: [{ kind: "component", type: i4.MLCaptionComponent, selector: "ml-caption", inputs: ["uiCaptionParam", "fieldId"] }, { kind: "component", type: i5.CdsButtonComponent, selector: "cds-button" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: TurnOffNotificationsSheet, decorators: [{
            type: Component,
            args: [{ selector: 'lib-turn-off-notifications', template: "<div class=\"row noti-popup\">\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_title'\"\n    class=\"col-xs-12 cds-body-hero cds-light\"\n  ></ml-caption>\n  <ml-caption\n    [fieldId]=\"'notifications_turn_off_popup_desc'\"\n    class=\"col-xs-12\"\n  ></ml-caption>\n  <div class=\"col-xs-12 actions\">\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      (click)=\"cancel()\"\n      [label]=\"'notifications_turn_off_cta1'\"\n    ></cds-button>\n    <cds-button\n      class=\"cta\"\n      fullWidth=\"true\"\n      [config]=\"{ style: 'secondary' }\"\n      (click)=\"proceed()\"\n      [label]=\"'notifications_turn_off_cta2'\"\n    ></cds-button>\n  </div>\n</div>\n", styles: ["@import\"../../../../../../node_modules/@cds/style-dictionary/css/_grid.css\";.noti-popup{width:100%;padding-top:var(--cds-spacing-06);padding-bottom:calc(var(--cds-spacing-04) + var(--ion-safe-area-bottom))}.row,.actions{gap:var(--cds-spacing-04)}.actions{display:flex;justify-content:space-between}.cta{flex-grow:1}.cds-body-hero{margin:0}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.CdsBottomSheetRef }, { type: i2.AdobeAnalyticsService }, { type: i3.CdsLangService }]; }, propDecorators: { isProceed: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHVybi1vZmYtbm90aWZpY2F0aW9ucy1zaGVldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1ub3RpZmljYXRpb24tY29udHJvbGxlci9zcmMvbGliL21vZHVsZXMvdHVybi1vZmYtbm90aWZpY2F0aW9ucy1zaGVldC90dXJuLW9mZi1ub3RpZmljYXRpb25zLXNoZWV0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25nLW5vdGlmaWNhdGlvbi1jb250cm9sbGVyL3NyYy9saWIvbW9kdWxlcy90dXJuLW9mZi1ub3RpZmljYXRpb25zLXNoZWV0L3R1cm4tb2ZmLW5vdGlmaWNhdGlvbnMtc2hlZXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQVUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7O0FBVXhFLE1BQU0sT0FBTyx5QkFBeUI7SUFHcEMsWUFDVSxRQUFzRCxFQUN0RCxjQUFxQyxFQUNyQyxjQUE4QjtRQUY5QixhQUFRLEdBQVIsUUFBUSxDQUE4QztRQUN0RCxtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUFDckMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBTDlCLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBTS9DLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxjQUFjLEVBQUU7WUFDbkQsS0FBSyxFQUNILElBQUksQ0FBQyxjQUFjLENBQUMsb0NBQW9DLENBQUM7Z0JBQ3pELHdCQUF3QjtTQUMzQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxjQUFjLENBQUMsZ0JBQWdCLENBQUMsYUFBYSxFQUFFO1lBQ2xELEtBQUssRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLDZCQUE2QixDQUFDLElBQUksU0FBUztTQUN2RSxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUU7WUFDbEQsS0FBSyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsNkJBQTZCLENBQUMsSUFBSSxVQUFVO1NBQ3hFLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDMUIsQ0FBQztJQUVPLGNBQWMsQ0FBQyxHQUFXO1FBQ2hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDNUQsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3hDLENBQUM7O3VIQXBDVSx5QkFBeUI7MkdBQXpCLHlCQUF5Qix1R0NWdEMsa3NCQXlCQTs0RkRmYSx5QkFBeUI7a0JBTHJDLFNBQVM7K0JBQ0UsNEJBQTRCO3lLQUs1QixTQUFTO3NCQUFsQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBZG9iZUFuYWx5dGljc1NlcnZpY2UgfSBmcm9tICdAY2RzL25nLWFkb2JlLWFuYWx5dGljcyc7XG5pbXBvcnQgeyBDZHNMYW5nU2VydmljZSB9IGZyb20gJ0BjZHMvbmctY29yZS9sYW5nJztcbmltcG9ydCB7IENkc0JvdHRvbVNoZWV0UmVmIH0gZnJvbSAnQGNkcy9uZy1pb25pYy1jb21wb25lbnRzL2JvdHRvbS1zaGVldCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi10dXJuLW9mZi1ub3RpZmljYXRpb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3R1cm4tb2ZmLW5vdGlmaWNhdGlvbnMtc2hlZXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi90dXJuLW9mZi1ub3RpZmljYXRpb25zLXNoZWV0LmNvbXBvbmVudC5jc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVybk9mZk5vdGlmaWNhdGlvbnNTaGVldCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBPdXRwdXQoKSBpc1Byb2NlZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBzaGVldFJlZjogQ2RzQm90dG9tU2hlZXRSZWY8VHVybk9mZk5vdGlmaWNhdGlvbnNTaGVldD4sXG4gICAgcHJpdmF0ZSBhZG9iZUFuYWx5dGljczogQWRvYmVBbmFseXRpY3NTZXJ2aWNlLFxuICAgIHByaXZhdGUgY2RzTGFuZ1NlcnZpY2U6IENkc0xhbmdTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmFkb2JlQW5hbHl0aWNzLnRyYWNrQ29tbW9uRXZlbnQoJ3BvcFVwRGlzcGxheScsIHtcbiAgICAgIHRpdGxlOlxuICAgICAgICB0aGlzLmdldFRyYW5zbGF0aW9uKCdub3RpZmljYXRpb25zX3R1cm5fb2ZmX3BvcHVwX3RpdGxlJykgPz9cbiAgICAgICAgJ1R1cm4gb2ZmIG5vdGlmaWNhdGlvbnMnLFxuICAgIH0pO1xuICB9XG5cbiAgY2FuY2VsKCkge1xuICAgIHRoaXMuYWRvYmVBbmFseXRpY3MudHJhY2tDb21tb25FdmVudCgnYnV0dG9uQ2xpY2snLCB7XG4gICAgICBsYWJlbDogdGhpcy5nZXRUcmFuc2xhdGlvbignbm90aWZpY2F0aW9uc190dXJuX29mZl9jdGExJykgPz8gJ05vdCBub3cnLFxuICAgIH0pO1xuICAgIHRoaXMuaXNQcm9jZWVkLmVtaXQoZmFsc2UpO1xuICAgIHRoaXMuc2hlZXRSZWYuZGlzbWlzcygpO1xuICB9XG5cbiAgcHJvY2VlZCgpIHtcbiAgICB0aGlzLmFkb2JlQW5hbHl0aWNzLnRyYWNrQ29tbW9uRXZlbnQoJ2J1dHRvbkNsaWNrJywge1xuICAgICAgbGFiZWw6IHRoaXMuZ2V0VHJhbnNsYXRpb24oJ25vdGlmaWNhdGlvbnNfdHVybl9vZmZfY3RhMicpID8/ICdUdXJuIG9mZicsXG4gICAgfSk7XG4gICAgdGhpcy5pc1Byb2NlZWQuZW1pdCh0cnVlKTtcbiAgICB0aGlzLnNoZWV0UmVmLmRpc21pc3MoKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0VHJhbnNsYXRpb24oa2V5OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IGVudHJpZXMgPSB0aGlzLmNkc0xhbmdTZXJ2aWNlLmdldExhbmdFbnRyaWVzQnlJZChrZXkpO1xuICAgIHJldHVybiBlbnRyaWVzID8gZW50cmllc1snZW4nXSA6IG51bGw7XG4gIH1cbn1cbiIsIjxkaXYgY2xhc3M9XCJyb3cgbm90aS1wb3B1cFwiPlxuICA8bWwtY2FwdGlvblxuICAgIFtmaWVsZElkXT1cIidub3RpZmljYXRpb25zX3R1cm5fb2ZmX3BvcHVwX3RpdGxlJ1wiXG4gICAgY2xhc3M9XCJjb2wteHMtMTIgY2RzLWJvZHktaGVybyBjZHMtbGlnaHRcIlxuICA+PC9tbC1jYXB0aW9uPlxuICA8bWwtY2FwdGlvblxuICAgIFtmaWVsZElkXT1cIidub3RpZmljYXRpb25zX3R1cm5fb2ZmX3BvcHVwX2Rlc2MnXCJcbiAgICBjbGFzcz1cImNvbC14cy0xMlwiXG4gID48L21sLWNhcHRpb24+XG4gIDxkaXYgY2xhc3M9XCJjb2wteHMtMTIgYWN0aW9uc1wiPlxuICAgIDxjZHMtYnV0dG9uXG4gICAgICBjbGFzcz1cImN0YVwiXG4gICAgICBmdWxsV2lkdGg9XCJ0cnVlXCJcbiAgICAgIChjbGljayk9XCJjYW5jZWwoKVwiXG4gICAgICBbbGFiZWxdPVwiJ25vdGlmaWNhdGlvbnNfdHVybl9vZmZfY3RhMSdcIlxuICAgID48L2Nkcy1idXR0b24+XG4gICAgPGNkcy1idXR0b25cbiAgICAgIGNsYXNzPVwiY3RhXCJcbiAgICAgIGZ1bGxXaWR0aD1cInRydWVcIlxuICAgICAgW2NvbmZpZ109XCJ7IHN0eWxlOiAnc2Vjb25kYXJ5JyB9XCJcbiAgICAgIChjbGljayk9XCJwcm9jZWVkKClcIlxuICAgICAgW2xhYmVsXT1cIidub3RpZmljYXRpb25zX3R1cm5fb2ZmX2N0YTInXCJcbiAgICA+PC9jZHMtYnV0dG9uPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19